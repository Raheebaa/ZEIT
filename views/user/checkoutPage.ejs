<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Check out</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"> -->
  <link rel="stylesheet" href="/user/css/home.css">
  <link rel="stylesheet" href="/user/css/unAuthorised.css">
  <link rel="stylesheet" href="/user/css/profile.css">

</head>

<body>
  <%- include('header') -%>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="container-fluid">

        <img src="/assets/Z.jpg" class="img-fluid" alt="Sample image" style="width: 50px;height: 50px;">
        <p class="custom-text-style">ZEIT</p>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent" style="margin-left: 135px;">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="#">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#">About</a>
            </li>
            <div class="container-fluid">
              <div class="collapse navbar-collapse" id="navbarNavDarkDropdown">
                <ul class="navbar-nav">
                  <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDarkDropdownMenuLink" role="button"
                      data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      Brands
                    </a>

                  </li>
                </ul>
              </div>
            </div>
            <%- include('footer') -%>

              <li class="nav-item">
                <a class="nav-link" href="#">Contacts</a>
              </li>
          </ul>
          </ul>
          <form class="custom-form d-flex ms-auto">
            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
            <button class="btn btn-outline-success" type="submit">Search</button>
          </form>

          <div class="d-flex float-end">

            <a href="" class="me-1 border rounded py-1 px-3 nav-link d-flex align-items-center"
              style="padding-left: 4px;"> <i class="fa fa-heart" aria-hidden="true"></i>
              <p class="d-none d-md-block mb-0">Wishlist</p>
            </a>
            <a href="/cart" class="border rounded py-1 px-3 nav-link d-flex align-items-center"> <i
                class="fas fa-shopping-cart m-1 me-md-2"></i>
              <p class="d-none d-md-block mb-0">My cart</p>
            </a>
            <a href="/profile" class="border rounded py-1 px-3 nav-link d-flex align-items-center">
              <i class="fas fa-user m-1 me-md-2"></i>
            </a>
          </div>
        </div>
      </div>
    </nav>
    <%- include('footer') -%>
      <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
          <form onsubmit="addAddress()">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <div class="form-group">
                  <label for="recipient-name" class="col-form-label">Name:</label>
                  <input type="text" name="name" class="form-control" id="recipient-name" required>
                </div>
                <div class="form-group">

                  <label for="recipient-name" class="col-form-label">Address:</label>
                  <input type="text" name="address" class="form-control" id="recipient-address" required>
                </div>
                <div class="form-group">
                  <label for="recipient-name" class="col-form-label">City:</label>
                  <input type="text" name="city" class="form-control" id="recipient-city" required>
                </div>
                <div class="form-group">
                  <label for="recipient-name" class="col-form-label">Pincode:</label>
                  <input type="text" name="pincode" class="form-control" id="recipient-pincode"
                    oninput="this.value = this.value.replace(/[^0-9]/g, '');" pattern="[0-9]*" maxlength="6" required>
                  <div id="pincode-validation-message" class="text-danger"></div>
                </div>
                <div class="form-group">
                  <label for="recipient-name" class="col-form-label">State:</label>
                  <input type="text" name="state" class="form-control" id="recipient-state" required>
                </div>
                <div class="form-group">
                  <label for="recipient-name" class="col-form-label">Mobile Number:</label>
                  <input type="number" name="number" class="form-control" id="recipient-number" required>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" id="submit-button" class="btn btn-primary">Add</button>
              </div>
            </div>
          </form>
        </div>
      </div>

      <form id="form-checkout">
        <input type="hidden" name="selectedPaymentMethod" id="selectedPaymentMethod" value="cod">
        <div class="container mt-5 custom-container main">
          <div class="row">

            <div class="col-md-9">
              <div class="card border rounded shadow">
                <div class="m-4 rounded shadow-5">
                  <h4 class="card-title mb-4">Select Address</h4>

                  <% userData.Address.forEach((x)=> { %>
                    <div class="form-check">
                      <hr>
                      <input class="form-check-input" value="<%= x._id %>" id="address1" type="radio" name="Address"
                        id="flexRadioDefault<%= x._id %> " checked>

                      <h6>Select Address</h6>
                      </label>
                      <hr>
                      <p>
                        <%= x.name %>
                      </p>
                      <p>
                        <%= x.addressLine %>
                      </p>
                      <p>
                        <%= x.pinCode %>
                      </p>
                      <p>
                        <%= x.city %>
                      </p>
                      <p>
                        <%= x.state %>
                      </p>
                      <p>
                        <%= x.MobileNumber %>
                      </p>
                    </div>
                    <% }) %>
                </div>


                <br>

                <a href="#" data-toggle="modal" data-target="#exampleModal" data-whatever="@fat"><button
                    class="btn btn-primary profile-button rounded-0 px-4 m-4" type="button">
                    Add Address</button></a>


              </div>
            </div>



            <div class="col-md-3">
              <div class="card mb-3 border shadow">
                <div class="card mb-3 border shadow">
                  <div class="card-body">
                    <form onsubmit="applyCoupon(event)">
                      <div class="form-group">
                        <label class="form-label">Have coupon?</label>
                        <div class="input-group">
                          <input type="text" class="form-control border" id="couponCodeInput"
                            placeholder="Coupon code" />
                          <button type="button" onclick="applyCoupon()">Apply Coupon</button>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>

              <div class="card shadow border">
                <div class="card-body">
                  <div class="d-flex justify-content-between">
                    <p class="mb-2">Total price:</p>
                    <p class="mb-2 fw-bold">â‚¹<%= TotalPrice %>
                    </p>
                  </div>
                  <div>
                    <p class="mb-2">Discount amount:</p>
                    <p class="mb-2 fw-bold"><span id="discountAmount"></span></p>
                  </div>
                  <div>
                    <p class="mb-2">Updated amount:</p>
                    <p class="mb-2 fw-bold"><span id="updatedTotalAmount"></span></p>
                  </div>

                </div>
              </div>


            </div>
          </div>
          <br>
          <!-- Inside the "Payment Methods" card -->
          <div class="card">
            <div class="card-body">
              <h5 class="card-title">Payment Methods</h5>

              <div class="form-check">
                <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="cod" checked />
                <label class="form-check-label text-black" for="cod">
                  Cash on Delivery (COD)
                </label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="paymentMethod" id="online" value="online" />
                <label class="form-check-label text-black" for="online">
                  Online Payment
                </label>
              </div>

              <div class="form-check">
                <input class="form-check-input" type="radio" name="paymentMethod" id="wallet" value="wallet" />
                <label class="form-check-label text-black" data-walletAmount="<%= userData.wallet %>" id="walletLabel">
                  Pay Using Wallet
                </label>
              </div>
              <!-- Add the "Pay Using Wallet" radio button here -->

              <div class="justify-content-center">
                <button class="btn btn-success mt-4" id="pay-button" type="submit">
                  Confirm Order
                </button>
                <a href="/home"><button class="btn btn-secondary mt-4" type="button">Back to Shop</button></a>
              </div>
            </div>
          </div>


        </div>
        </div>
        </div>
      </form>

      <!-- Add this div to your HTML body -->
      <div class="modal" id="customAlertModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
          <div class="modal-content ">
            <div class="modal-header">
              <h5 class="modal-title text-danger">Alert</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body" id="customAlertBody">
              <!-- Your alert message will be displayed here -->
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
            </div>
          </div>
        </div>
      </div>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
      <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>


      <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
      <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

      <script>


        document.addEventListener('DOMContentLoaded', function () {
          const paymentMethodRadios = document.querySelectorAll('input[name="paymentMethod"]');
          const selectedPaymentMethodInput = document.getElementById('selectedPaymentMethod');

          paymentMethodRadios.forEach(function (radio) {
            radio.addEventListener('change', updatePaymentMethod);
          });

          function updatePaymentMethod() {
            selectedPaymentMethodInput.value = document.querySelector('input[name="paymentMethod"]:checked').value;
            console.log("Payment Method Received:", selectedPaymentMethodInput.value);
          }
        });

        function showAlert(message, type) {
          const alertBody = document.getElementById('customAlertBody');
          alertBody.innerHTML = message;
          alertBody.className = `modal-body ${type}`;
          $('#customAlertModal').modal('show');
        }

        function addAddress() {
          const name = document.getElementById("recipient-name").value
          const address = document.getElementById("recipient-address").value
          const city = document.getElementById("recipient-city").value
          const pincode = document.getElementById("recipient-pincode").value
          const state = document.getElementById("recipient-state").value
          const number = document.getElementById("recipient-number").value

          const body = {
            name, address, city, pincode, state, number
          }
          fetch("/addAddress", {
            method: "POST",
            body: JSON.stringify(body),
            headers: {
              'Content-Type': 'application/json',
            },
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                window.location.reload()
              } else {
                console.log("error adding address")
              }
            })
            .catch((error) => {
              console.error('Error deleting address:', error);
            })
        }

        document.getElementById('form-checkout').addEventListener('submit', async (e) => {
          e.preventDefault();

          const selectedAddress = document.querySelector('input[name="Address"]:checked');
          const selectedAddressValue = selectedAddress ? selectedAddress.value : null;

          const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;

          if (!selectedAddress) {
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: 'Please add an address before confirming the order.',
            });
            return;
          }

          try {
            const response = await fetch('/placeOrder', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                selectedAddress: selectedAddressValue,
                selectedPaymentMethod: selectedPaymentMethod,
              }),
            });

            if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const result = await response.json();

            if (result.success) {
              console.log('Order placed successfully!');

              if (selectedPaymentMethod === "online" && result.razorpayOrder) {
                razorpay(result.razorpayOrder, result.savedOrder, () => {
                  window.location = '/ordersuccess';
                });
              } else {
                window.location = '/ordersuccess';
              }
            } else {
              console.error('Order placement failed:', result.message);
              showAlert(result.message || 'Failed to place order. Please try again.', 'error');
            }
          } catch (error) {
            console.error("Error during order placement:", error);
            // Handle error accordingly
          }
        });
        function razorpay(razorpayOrder, savedOrder, successCallback) {
          try {
            if (!razorpayOrder || !razorpayOrder.id || !razorpayOrder.currency) {
              throw new Error('Invalid Razorpay order details');
            }

            // Default amount from razorpayOrder
            let amount = razorpayOrder.amount;

            // Check if there's an updated total amount element
            const updatedTotalAmountElement = document.getElementById('updatedTotalAmount');
            if (updatedTotalAmountElement) {
              const updatedAmount = parseFloat(updatedTotalAmountElement.innerText);
              if (!isNaN(updatedAmount)) {
                // Convert to paisa (Razorpay accepts amount in paisa)
                amount = updatedAmount * 100;
              }
            }

            var options = {
              "key": "rzp_test_9oVCk3W2kwsPv6",
              "amount": amount,
              "currency": razorpayOrder.currency,
              "name": "zeit",
              "description": "Test Transaction",
              "image": "",
              "order_id": razorpayOrder.id,
              "handler": function (response) {
                console.log(response.razorpay_payment_id);
                console.log(response.razorpay_order_id);
                console.log(response.razorpay_signature);
                verifyPayment(response, savedOrder);
                if (response.razorpay_payment_id) {
                  // If payment is successful, call the successCallback function
                  successCallback();
                }
              },
              "notes": {
                "address": "Razorpay Corporate Office"
              },
              "theme": {
                "color": "#BCC33E"
              }
            };

            var rzp1 = new Razorpay(options);

            rzp1.open();

            rzp1.on('payment.success', function (response) {
              console.log('Razorpay Payment Success:', response);
              verifyPayment(response, savedOrder);
              successCallback();  // Call the successCallback function here
              window.location = '/ordersuccess';
            });


            rzp1.on('payment.failed', function (response) {
              console.error('Razorpay Payment Failed:', response.error);
              // Handle payment failure if needed
            });

          } catch (error) {
            console.error('Error initializing Razorpay:', error);
            // Handle error accordingly
          }
        }
        function verifyPayment(payment, orderDetails) {
          fetch("/user/verifyPayment", {
            method: "POST",
            body: JSON.stringify({ payment, orderDetails }),
            headers: {
              'Content-Type': 'application/json',
            },

          })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                window.location = '/ordersuccess';
              }
            })
        }
      </script>
      <script>
        function applyCoupon() {
          const couponCodeInput = document.getElementById('couponCodeInput');
          const couponCode = couponCodeInput.value;

          fetch('/applyCoupon', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              couponCode: couponCode,
            }),
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                // Update the discount amount and updated total amount elements
                document.getElementById('discountAmount').innerText = data.discountAmount.toFixed(2);
                document.getElementById('updatedTotalAmount').innerText = data.updatedTotalAmount.toFixed(2);
                // Optionally, you can update other UI elements here
                swal("Coupon Applied", "Your total amount has been updated.", "success");
              } else {
                console.error('Failed to apply coupon:', data.message);
                swal("Error", "Failed to apply coupon. Please try again.", "error");
              }
            })
            .catch(error => {
              console.error('Error applying coupon:', error);
              swal("Error", "An error occurred while applying the coupon. Please try again.", "error");
            });
        }

      </script>

</html>