<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <link rel="stylesheet" href="/user/css/home.css">
  <link rel="stylesheet" href="/user/css/unAuthorised.css">
  <link rel="stylesheet" href="/user/css/style.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
  
  
</head>

<body>
  <%- include('navbar') -%>
  <%- include('header') -%>


    <section class="bg-white">

      <div class="container-fluid p-5">
        <div class="row">
          <!-- cart -->

          <div class="col-lg-9">
            <div class="card border rounded shadow">
              <div class="m-4 rounded shadow-5">
                <h4 class="card-title mb-4">Your shopping cart</h4>
                <table class="table">
                  <thead>
                    <tr>
                      <th scope="col" class="h5">items</th>
                      <th scope="col">Price</th>
                      
                      <th scope="col">Quantity</th>
                      <th scope="col">total</th>
                      <th scope="col">remove</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% if (cart && cart.items && cart.items.length> 0) { %>
                      <% cart.items.forEach(item=> { %>
                        <tr data-item-id="<%= item._id %>">
                          <td>
                            <div class="d-flex align-items-center">
                              <% if (item.productId && item.productId.ProductImage &&
                                Array.isArray(item.productId.ProductImage) && item.productId.ProductImage.length> 0) {
                                %>
                                <img src="/upload/<%= item.productId.ProductImage[0] %>" class="border rounded me-3"
                                  style="width: 60px; height: 60px;" />
                                <% } else { %>
                                  <img src="#" class="border rounded me-3" style="width: 60px; height: 60px;" />
                                  <% } %>
                                    <div class="flex-column ms-4">
                                      <h6>
                                        <% if (item.productId) { %>
                                          <%= item.productId.ProductName %>
                                            <% } else { %>
                                              Product Not Available
                                              <% } %>
                                      </h6>
                                    </div>

                            </div>
                            <td id="totalPrice_<%= item._id %>">
    <p class="mb-2"><strong>&#x20B9;<%= item.productId && item.productId.discountAmount ? item.productId.discountAmount : (item.productId ? item.productId.price : 0) %></strong></p>
</td>



                            <% const itemCategory = item.productId.categoryId; %>
  <% const categoryOffer = catoffers.find(offer => offer.categoryId === itemCategory); %>






                         
                          <div class="mb-3">

                          <td>
                            <div class="input-group" style="width: 120px;">
                              <button class="btn btn-outline-secondary" type="button"
                                onclick="updateCartQuantity('<%= item._id %>', -1)">-</button>
                              <input type="number" class="form-control" value="<%= item.quantity %>"
                                id="cartQuantity<%= item._id %>" min="1" max="<%= item.productId?.stock || 1 %>"
                                onchange="updateCartQuantity('<%= item._id %>', 0)">
                              <button class="btn btn-outline-secondary" type="button"
                                onclick="updateCartQuantity('<%= item._id %>', 1)">+</button>
                            </div>
                          </td>

                          <td id="totalapriceofoneproduct_<%= item._id %>">
                            <p class="mb-2">
                              <strong>&#x20B9;<%= (item.productId?.price || 0) * item.quantity.toFixed(2) %></strong>
                            </p>
                          </td>



                          <td>
                            <div>
                              <a href="#" id="removeCart" class="align-middle"
                                onclick="removeFromCart('<%= item.productId?._id %>','<%= cart._id %>','<%= item.productId?.ProductName %>')">

                                <i class="fa fa-trash-can fa-md" style="color: #c01b1b;"></i>
                              </a>
                            </div>
                          </td>
                        </tr>
                        <% }) %>
                          <% } else { %>
                            <tr>
                              <td colspan="5">
                                <p>Your cart is currently empty.</p>
                              </td>
                            </tr>
                            <% } %>
                  </tbody>

                </table>
              </div>
            </div>
          </div>
          <% function getCategoryOfferPercentage(categoryOffer, item) { %>
  <% const offerPercentage = categoryOffer ? categoryOffer.percentage : 0; %>
  <% const originalPrice = item.productId ? item.productId.price : 0; %>
  <% const discountedPrice = originalPrice - (originalPrice * offerPercentage) / 100; %>
  Discount Amount: &#x20B9;<%= discountedPrice.toFixed(2) %>
<% } %>
          <div class="col-lg-3">
            <div class="card mb-3 border shadow">
              <div class="card-body">
                <form onsubmit="applyCoupon(event)">
                  <div class="form-group">
                    <label class="form-label">Have coupon?</label>
                    <div class="input-group">
                      <input type="text" class="form-control border" id="couponCodeInput" placeholder="Coupon code" />
                      <button type="button" onclick="applyCoupon()">Apply Coupon</button>



                    </div>
                  </div>
                </form>
              </div>
            </div>




            <div class="d-flex justify-content-between">
              <p class="mb-2">Total Quantity:</p>
              <p class="mb-2" id="totalQuantity"><strong><%= totalQuantity %></strong></p>
            </div>

            <div class="d-flex justify-content-between">
              <p class="mb-2">Total Price:</p>
              <p class="mb-2" id="totalPrice"><strong>&#x20B9;<%= totalCartPrice %></strong></p>
            </div>
         
            <div class="d-flex justify-content-between">
              <p class="mb-2">TAX:</p>
              <p class="mb-2" id="tax"><strong>&#x20B9;<%= TAX.toFixed(1) %></strong></p>
            </div>

            <hr />

            <div class="d-flex justify-content-between">
              <p class="mb-2">Total price:</p>
              <% if (cart && cart.TotalAmount) { %>
                <p class="mb-2" id="totalPriceWithTax"><strong>&#x20B9;<%= parseInt(cart.TotalAmount).toFixed(1) %>
                  </strong></p>
                <% } else { %>
                  <p class="mb-2" id="totalPriceWithTax"><strong>&#x20B9;0.0</strong></p>
                  <% } %>

            </div>
          

            <div class="mt-3">
              <% if (showCheckoutButton) { %>
                <a href="/toCheckout" id="makePurchaseBtn" class="btn btn-success w-100 shadow-0 mb-2"
                  onclick="makePurchase()"> Make Purchase </a>
                <% } %>
                  <a href="/home" class="btn btn-light w-100 border mt-2"> Back to shop </a>
            </div>

          </div>
        </div>
      </div>

      <div class="col-lg-12">
        <div class="card border rounded shadow">
          <div class="m-4 rounded shadow-5 m-5">
            <h1 class="text-center bg-black" style="color: #ffff; padding-top: 30px;">YOUR CART</h1>

            <div class="d-flex justify-content-center">

              <button class="btn btn-dark p-2 rounded-0" style="width: 500px;">
                continue shopping
              </button>
            </div>
          </div>
        </div>
      </div>


      </div>
      </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.bundle.min.js"></script>


    <script>

      function addToCart(itemId) {
        fetch('/user/addToCart', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            itemId: itemId,
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              // Update the UI dynamically
              updateCartUI();
              swal("Success!", "Item added to cart..............", "success");
            } else {
              console.error('Error adding product to the cart:', data.message);
              swal("Error!", "Failed to add item to cart..............", "error");
            }
          })
          .catch((error) => {
            console.error('Error adding product to the cart:', error);
            swal("Error!", "Failed to add item to cart..............", "error");
          });
      }


      function removeFromCart(productId, cartId, productName) {
        fetch(`/removeFromCart/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            cartId: cartId,
            productName: productName,
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              // Display SweetAlert message
              swal({
                title: "Success!",
                text: "Item removed from cart",
                icon: "success",
              }).then(() => {
                // Reload the page after the user clicks "OK"
                window.location.reload();
              });
            } else {
              console.error('Error removing product from the cart:', data.message);
              swal("Error!", "Failed to remove item from cart", "error");
            }
          })
          .catch((error) => {
            console.error('Error removing product from the cart:', error);
            swal("Error!", "Failed to remove item from cart", "error");
          });
      }

    </script>

    <script>
      var updateInProgress = false; // Variable to track whether an update is in progress

      function updateCartQuantity(itemId, change) {
  var quantityInput = document.getElementById('cartQuantity' + itemId);
  if (quantityInput && !updateInProgress) {
    updateInProgress = true;

    var newQuantity = parseInt(quantityInput.value) + change;
    var maxStock = parseInt(quantityInput.getAttribute('max')) || Infinity;

    if (newQuantity < 1 || newQuantity > maxStock) {

      swal("Error!", "stock is reached cannot increment", "error");
      updateInProgress = false;
      return;
    }

    quantityInput.value = newQuantity;

    // Update the quantity in the backend (send a request to your server)
    fetch('/updateCartQuantity', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        itemId: itemId,
        newQuantity: newQuantity,
      }),
    })
      .then(async (response) => {
        if (!response.ok) {
          const data = await response.json();
          // Display error message only if it's not due to stock limit and the change is not zero
          if (!data.stockLimitReached && change !== 0) {
            swal("Error!", data.message || "Failed to update cart quantity.", "error");
          }
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        if (data.success) {
          updateTotalDetails();
        }
      })
      .catch((error) => {
        console.error('Error updating cart quantity:', error);
      })
      .finally(() => {
        setTimeout(() => {
          updateInProgress = false;
        }, 100);
      });
  }
}
      function updateTotalDetails() {
        // Fetch and update values
        var updateInProgress = false;
        var totalQuantityElement = document.getElementById('totalQuantity');
        var totalPriceElement = document.getElementById('totalPrice');
        var discountElement = document.getElementById('discount');
        var taxElement = document.getElementById('tax');
        var totalPriceWithTaxElement = document.getElementById('totalPriceWithTax');


        // Fetch new values based on the updated quantity
        var updatedTotalQuantity = calculateUpdatedTotalQuantity();
        var updatedTotalPrice = calculateUpdatedTotalPrice();
        var updatedDiscount = calculateUpdatedDiscount();
        var updatedTax = calculateUpdatedTax();
        var updatedTotalPriceWithTax = calculateUpdatedTotalPriceWithTax();

        // Update HTML elements
        totalQuantityElement.innerHTML = '<strong>' + updatedTotalQuantity + '</strong>';
        totalPriceElement.innerHTML = '<strong>&#x20B9;' + updatedTotalPrice + '</strong>';
        discountElement.innerHTML = '<strong>-&#x20B9;' + updatedDiscount + '</strong>';
        taxElement.innerHTML = '<strong>&#x20B9;' + updatedTax.toFixed(1) + '</strong>';

        totalPriceWithTaxElement.innerHTML = `&#x20B9;${updatedTotalPriceWithTax}`;


        // Update the variable totalPriceWithTAX if needed
        // Example assuming totalPriceWithTAX is a variable in your script:
        // totalPriceWithTAX = updatedTotalPriceWithTax;
      }

      function calculateUpdatedTotalQuantity() {
        var totalQuantity = 0;
        var itemRows = document.querySelectorAll('tbody tr');
        itemRows.forEach(function (row) {
          var quantityInput = row.querySelector('input[type="number"]');
          if (quantityInput) {
            totalQuantity += parseInt(quantityInput.value);
          }
        });
        return totalQuantity;
      }

      function calculateUpdatedTotalPrice() {
        var total = 0;
        var itemRows = document.querySelectorAll('tbody tr');
        itemRows.forEach(function (row) {
          var quantityInput = row.querySelector('input[type="number"]');
          var priceElement = row.querySelector('.mb-2 strong');
          var price = parseFloat(priceElement.innerText.replace('₹', ''));

          if (!isNaN(price) && quantityInput) {
            var newTotalForProduct = parseInt(quantityInput.value) * price;

            // Update the HTML element with the new value
            var totalForProductElement = row.querySelector('[id^="totalapriceofoneproduct_"]');
            totalForProductElement.innerHTML = '<p class="mb-2"><strong>&#x20B9;' + newTotalForProduct.toFixed(2) + '</strong></p>';

            total += newTotalForProduct;
          }
        });

        return total.toFixed(2);
      }


      function calculateUpdatedDiscount() {
        // Implement your discount calculation logic here
        return 0;
      }

      function calculateUpdatedTax() {
        var updatedTotalPrice = calculateUpdatedTotalPrice();
        var totalTax = updatedTotalPrice * 0.01;
        var taxElement = document.getElementById('tax');
        taxElement.innerHTML = '<strong>&#x20B9;' + totalTax.toFixed(1) + '</strong>';
        return totalTax;
      }
      function calculateUpdatedTotalPriceWithTax() {
        var updatedTotalPrice = parseFloat(calculateUpdatedTotalPrice());
        var updatedTax = parseFloat(calculateUpdatedTax());
        var totalPriceWithTax = updatedTotalPrice + updatedTax;

        // Update the HTML element with the new value
        var totalPriceWithTaxElement = document.getElementById('totalPriceWithTax');
        totalPriceWithTaxElement.innerHTML = '<strong>&#x20B9;' + totalPriceWithTax.toFixed(1) + '</strong>';

        return totalPriceWithTax.toFixed(1);
      }

      function calculateCartTotal(items) {
        return items.reduce((total, item) => {
          // Assuming each item has a `productId` and `quantity` property
          return total + (item.productId.price || 0) * item.quantity;
        }, 0);
      }

    </script>
    <script>
    function applyCoupon() {
        const couponCodeInput = document.getElementById('couponCodeInput');
        const couponCode = couponCodeInput.value;

        fetch('/applyCoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                couponCode: couponCode,
            }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update the total amount on the client side
                const totalAmountElement = document.getElementById('tax');
                if (totalAmountElement) {
                    totalAmountElement.innerHTML = `<strong>&#x20B9;${data.updatedTotalAmount.toFixed(1)}</strong>`;
                }

                // Optionally, you can update other UI elements here
                swal("Coupon Applied", "Your total amount has been updated.", "success");
            } else {
                console.error('Failed to apply coupon:', data.message);
                swal("Error", "Failed to apply coupon. Please try again.", "error");
            }
        })
        .catch(error => {
            console.error('Error applying coupon:', error);
            swal("Error", "An error occurred while applying the coupon. Please try again.", "error");
        });
    }
</script>
</body>

</html>